
  console.log(`Mongoose: ${mongoose.version}`);
  const mongo = {
    uri: 'mongodb://localhost:27017/simplon',
    opt: {
      useNewUrlParser: true,
      useUnifiedTopology: true
    }
  };
  
  mongoose.connect(mongo.uri, mongo.opt)

  var userData = {
    email: 'test@gmail.com',
    username: 'cyb3rghost',
    password: 'test974',
  }
  //use schema.create to insert data into the db
  User.create(userData, function (err, user) {
    if (err) {
      return next(err)
    } else {
      return res.redirect('/');
    }
  });


var mongoose = require('mongoose');
var UserSchema = new mongoose.Schema({
  email: {
    type: String,
    unique: true,
    required: true,
    trim: true
  },
  username: {
    type: String,
    unique: true,
    required: true,
    trim: true
  },
  password: {
    type: String,
    required: true,
  }
});
var User = mongoose.model('User', UserSchema);
module.exports = User;

UserSchema.statics.authenticate = async function (email, password) {
try {
 const user = await this.findOne({ email });
if (!user) {
 throw new Error('User not found');
}
if (!bcrypt.compareSync(password, user.password)) {
 throw new Error('Authentication failed');
}
 return user;
 } catch (error) {
  throw error;
 }
};


Express generator - Génère un squelette express
express-mongoose-generator - Permet de générer des models et des controllers.

<% choix.forEach( choise => { %>
  <% choise %>
<% }) %>

<% for(var i=0; i<choix.length; i++) {%>
<li>
  <%= choix[i]%>
 </li>
<% } %>

